target akka;

impl headers java:{=
=}
impl dependencies gradle:{=
    implementation group: 'redis.clients', name: 'jedis', version: '4.2.1'
=}

impl component Client {
    impl state kv java:{=
        null
    =}
}

impl component KVServer {

    impl headers java:{=
        import redis.clients.jedis.JedisPooled;
    =}

    (* binding for the get method *)
    impl method _get java:{=
        // Open a socket to the local redis backend
        JedisPooled jedis = new JedisPooled({{%ip(current_place())%}}, {{%port(current_place())%}});
        // Perform the GET request on key [k]
        return Integer.parseInt(jedis.get({{%k._0_%}}));
    =}

    impl method put java:{=
        // Open a socket to the local redis backend
        JedisPooled jedis = new JedisPooled({{%ip(current_place())%}}, {{%port(current_place())%}});
        // Perform the PUT request on key [k]
        return jedis.sadd({{%k._0_%}}, {{%v._0_%}}.toString()) == 0;
    =}
}

impl component TopLevel {}